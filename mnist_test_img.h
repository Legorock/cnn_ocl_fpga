#pragma once

#include <fstream>
#include <vector>
#include <cstdint>

namespace mnist_test
{
static std::uint8_t img[28*28] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 16, 17, 21, 28, 29, 23, 13, 3, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 9, 42, 139, 142, 165, 210, 220, 181, 116, 47, 15, 2, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 128, 229, 252, 252, 255, 255, 255, 253, 251, 235, 150, 27, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 58, 199, 255, 253, 169, 168, 168, 167, 166, 166, 164, 218, 232, 150, 35, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 153, 239, 242, 172, 27, 28, 29, 29, 28, 28, 28, 48, 110, 131, 44, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 11, 122, 224, 236, 165, 50, 0, 0, 0, 0, 0, 0, 0, 0, 19, 31, 12, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 29, 185, 239, 164, 54, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 3, 80, 218, 225, 73, 1, 0, 15, 35, 42, 38, 20, 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 14, 165, 245, 215, 51, 9, 29, 126, 197, 225, 210, 135, 24, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 28, 217, 248, 180, 120, 196, 230, 251, 255, 255, 255, 236, 128, 3, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 10, 165, 244, 255, 255, 251, 248, 189, 154, 159, 221, 251, 225, 33, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 3, 80, 200, 235, 217, 156, 68, 31, 25, 52, 181, 252, 240, 59, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 16, 63, 79, 67, 34, 4, 0, 0, 30, 176, 250, 226, 42, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 1, 0, 0, 0, 2, 69, 202, 247, 184, 13, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 155, 239, 230, 117, 3, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 105, 223, 243, 161, 32, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 218, 255, 218, 71, 2, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 3, 20, 118, 244, 252, 228, 114, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 46, 68, 48, 95, 176, 231, 249, 233, 143, 40, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 2, 74, 182, 205, 221, 242, 241, 194, 130, 43, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 58, 180, 221, 215, 189, 140, 60, 27, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 11, 39, 48, 46, 38, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

inline std::vector<float> get_a_img(const char * img_loc)
{
    std::ifstream img_num(img_loc, std::ios::binary);
    if(img_num)
    {
        std::streampos fileSize;
        std::size_t sizeofBuff;

        img_num.seekg(0, std::ios::end);
        fileSize = img_num.tellg();
        img_num.seekg(0, std::ios::beg);

        sizeofBuff = fileSize / sizeof(float);

        std::vector<float> f(sizeofBuff, 0.0f);
        img_num.read(reinterpret_cast<char*>(f.data()), fileSize);
        return f;
    }
    else
        return std::vector<float>();
}
}
